<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="yubikey" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAABKlJREFUWEft
        ltlvW1UQh/lHeOCJtaJJ3LRUIFTxAKhVy1Ko2KlEgbK1fYJnhNqqLC1bxVMlJFSavWmaNGlCSGhChGji
        tXa8R/GWzYmT2I73YWY8xjn3XrvhAfWln2VZnnPu3N+ZM2fm3AN3mLsCtiygWMrB3NpfYI/+ADf8H0O/
        8yD0OJ7B3xfhD99HYIt8B7G1P6FQzMgTW+O2Akr4CcZ7YMj9BnRYHoNWcyO0TG3n3zZz06b/DTi+Cwan
        XwP/UieUSgXxUJ+6AlLZKIz5j+GLduDXxL89jqdh1PcBTM6eBGvkHEyGTnEEehzPbppnQtuHsJ6ZFU+1
        qSkgseGDftdBdNbEjgdcL4Fn4VdIZiMyQyWVi4FvsRWuT78C7SKkz3kAltMumWGMoYBUNsZ722YxQTuG
        1Rw6A9l8QkbrkyusgzV8jreLhPc599eNhE4A7d1Y4DivvN2yE6bnf5aR/4Z34RLnBEVi1HeUk9gInYCZ
        eC8/ROrN4S/FCrCUNGMkTqLtNM65LNYy65kZsITP8Jh/qU2sALbo9+yHFuNbbBeriiKgUMrAoPt1foD2
        Ml9MyQjmRNqDmb4NLt68D67Yn4RsoboltshZ+OXve/k7PX9BrGV/Q+632N+A62XFXwVFwNzaBO85qQ4s
        dYm1ynjgGIp4iL+zy31sK5aycN31AtoexpOwBzL5ONsrzC73o89m/kYSI2KtogiwRr7l89x7ay86WhZr
        lfDKEL+IBIwHPmHbYvImOn8Ua8EDeDQ/Z9tmKCmvOZ+D1qkGmAqdFmsVRQCdbyoqY/7jYlHJF9PobB9G
        aBtctu1mkdbI1/jM/SiiAfPEIjNVJoKfsoDfPIfFUkURcM1JoWxUkk8L7TetttX8CNyKncecOcQChj1v
        4gkqyiwVOydjE1zFYqVFEUBVjibao+fFoieRdkOn1YRHrJGj0GVtRgEPKtmvxTV3Af2aoNu2RyxVNBF4
        XiLwlViMGfUd4Qh0WKlWbMeVPWWYMxWogdHCqHlp0eTAUcmBE2IxZibezQI6rTt49ZOhL2TEmIngZ5ID
        b4uliiLAivtbPgX7cEUrYtWTzi1gOJ/AbWjg5IunbDKiJ1dIlnMLBVDj0qIIiK2Oo8Od3EyC8Sti1RNa
        GeSTQFEY8dKqSuUBA2hupQ6EE8NiraIIKBQ3sJ+/yvtFfT2P//UUcave4ZNwCbM/sNQhdj1U/4fdh9kf
        XWDyWBO0KAKIIO5vuReYuN9rWU47odv+OHTZdqHT/UpJ1uKI/SStuQm8iy1iVdEJKJXyfMGgh6gsexYu
        ykgZqmzJbJgvK/Uy34+RKbdkE/zuPcIl2widAIJe0Iflk3oCtVRr+Cy/eCtQtbRHf8Qjupuf73XshdVM
        UEb1GAogVrDgUA3nSKAj6o60qnRuXmaobOQWIYBtmu6O5RZs4tMUT9llhjE1BRDrmRDf7So5QY6v4oro
        nkjlmlZqwaJFdYNe1m5u/nfuiPddWNsIiKfa1BVA0A2JVs53PTyiVCdaNbdi/o/nnMYHXIfwNtRS8wak
        5bYCKtARja7ewBV/g6t7n3OEegf9jnjf4/IdSYwaXjrqsWUB/xd3BdxhAQD/AEGOv5H5PDvuAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>